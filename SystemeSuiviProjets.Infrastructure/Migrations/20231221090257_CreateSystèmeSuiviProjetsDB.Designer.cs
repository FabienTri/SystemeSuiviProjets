// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SystemeSuiviProjets.Infrastructure;

#nullable disable

namespace SystemeSuiviProjets.Infrastructure.Migrations
{
    [DbContext(typeof(SystèmeSuiviProjetsContext))]
    [Migration("20231221090257_CreateSystèmeSuiviProjetsDB")]
    partial class CreateSystèmeSuiviProjetsDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SystemeSuiviProjets.Core.Catégorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TarifFacturationHeure")
                        .HasColumnType("bigint");

                    b.Property<long>("TarifFacturationJour")
                        .HasColumnType("bigint");

                    b.Property<long>("TarifFacturationSemaine")
                        .HasColumnType("bigint");

                    b.Property<long>("TarifPaiementHeure")
                        .HasColumnType("bigint");

                    b.Property<long>("TarifPaiementJour")
                        .HasColumnType("bigint");

                    b.Property<long>("TarifPaiementSemaine")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Catégories");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.EstAssigné", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateAssignation")
                        .HasColumnType("date");

                    b.Property<int?>("ProfessionnelId")
                        .HasColumnType("int");

                    b.Property<int>("ProjetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionnelId");

                    b.HasIndex("ProjetId");

                    b.ToTable("EstAssigné");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.FeuillePrésence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCréation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDernièreModification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDébutPériode")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFinPériode")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfessionnelId")
                        .HasColumnType("int");

                    b.Property<int?>("SystèmePaiementProfessionnelsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionnelId");

                    b.HasIndex("SystèmePaiementProfessionnelsId");

                    b.ToTable("FeuillePrésence");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.LigneFeuillePrésence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FeuillePrésenceId")
                        .HasColumnType("int");

                    b.Property<double>("FraisDéplacement")
                        .HasColumnType("float");

                    b.Property<double>("FraisSéjour")
                        .HasColumnType("float");

                    b.Property<int>("NombreUnités")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetId")
                        .HasColumnType("int");

                    b.Property<int>("TypeTarification")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeuillePrésenceId");

                    b.HasIndex("ProjetId");

                    b.ToTable("LigneFeuillePrésence");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.ProfessionnelEstDansCatégorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatégorieId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateAffectation")
                        .HasColumnType("date");

                    b.Property<int>("ProfessionnelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatégorieId");

                    b.HasIndex("ProfessionnelId");

                    b.ToTable("ProfessionnelEstDansCatégorie");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("BudgetTotal")
                        .HasColumnType("bigint");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateDébut")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateFin")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projet");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateConnexion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDeconnexion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.SystèmeFacturationClients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Documents")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystèmeFacturationClients");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.SystèmePaiementProfessionnels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("SystèmePaiementProfessionnels");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("MotDePasse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomConnexion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilisateur");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Utilisateur");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Client", b =>
                {
                    b.HasBaseType("SystemeSuiviProjets.Core.Utilisateur");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomCompagnie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Téléphone")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Utilisateur", t =>
                        {
                            t.Property("Adresse")
                                .HasColumnName("Client_Adresse");

                            t.Property("Téléphone")
                                .HasColumnName("Client_Téléphone");
                        });

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Employé", b =>
                {
                    b.HasBaseType("SystemeSuiviProjets.Core.Utilisateur");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DateEmbauche")
                        .HasColumnType("date");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prénom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Téléphone")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Employé");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Gestionnaire", b =>
                {
                    b.HasBaseType("SystemeSuiviProjets.Core.Employé");

                    b.HasDiscriminator().HasValue("Gestionnaire");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Professionnel", b =>
                {
                    b.HasBaseType("SystemeSuiviProjets.Core.Employé");

                    b.HasDiscriminator().HasValue("Professionnel");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.EstAssigné", b =>
                {
                    b.HasOne("SystemeSuiviProjets.Core.Professionnel", "Professionnel")
                        .WithMany("Projets")
                        .HasForeignKey("ProfessionnelId");

                    b.HasOne("SystemeSuiviProjets.Core.Projet", "Projet")
                        .WithMany("Professionnels")
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professionnel");

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.FeuillePrésence", b =>
                {
                    b.HasOne("SystemeSuiviProjets.Core.Professionnel", "Professionnel")
                        .WithMany()
                        .HasForeignKey("ProfessionnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemeSuiviProjets.Core.SystèmePaiementProfessionnels", null)
                        .WithMany("FeuillesPrésence")
                        .HasForeignKey("SystèmePaiementProfessionnelsId");

                    b.Navigation("Professionnel");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.LigneFeuillePrésence", b =>
                {
                    b.HasOne("SystemeSuiviProjets.Core.FeuillePrésence", "FeuillePrésence")
                        .WithMany("LignesFeuillePrésence")
                        .HasForeignKey("FeuillePrésenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemeSuiviProjets.Core.Projet", "Projet")
                        .WithMany("LignesFeuillePrésence")
                        .HasForeignKey("ProjetId");

                    b.Navigation("FeuillePrésence");

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.ProfessionnelEstDansCatégorie", b =>
                {
                    b.HasOne("SystemeSuiviProjets.Core.Catégorie", "Catégorie")
                        .WithMany("Professionnels")
                        .HasForeignKey("CatégorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemeSuiviProjets.Core.Professionnel", "Professionnel")
                        .WithMany("Catégories")
                        .HasForeignKey("ProfessionnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catégorie");

                    b.Navigation("Professionnel");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Projet", b =>
                {
                    b.HasOne("SystemeSuiviProjets.Core.Client", "Client")
                        .WithMany("Projets")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Session", b =>
                {
                    b.HasOne("SystemeSuiviProjets.Core.Utilisateur", "Utilisateur")
                        .WithMany("Sessions")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Catégorie", b =>
                {
                    b.Navigation("Professionnels");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.FeuillePrésence", b =>
                {
                    b.Navigation("LignesFeuillePrésence");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Projet", b =>
                {
                    b.Navigation("LignesFeuillePrésence");

                    b.Navigation("Professionnels");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.SystèmePaiementProfessionnels", b =>
                {
                    b.Navigation("FeuillesPrésence");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Utilisateur", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Client", b =>
                {
                    b.Navigation("Projets");
                });

            modelBuilder.Entity("SystemeSuiviProjets.Core.Professionnel", b =>
                {
                    b.Navigation("Catégories");

                    b.Navigation("Projets");
                });
#pragma warning restore 612, 618
        }
    }
}
